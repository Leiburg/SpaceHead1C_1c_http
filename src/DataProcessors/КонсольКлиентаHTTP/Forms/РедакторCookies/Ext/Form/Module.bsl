
&НаКлиенте
Перем ТекущееДоменноеИмя;

&НаКлиенте
Перем ТекущийКлючПеченьки, ТекущееИмяПеченьки, ТекущееЗначениеПеченьки;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// TODO: переделать ЗначенияАтрибутовПоУмолчанию в структуру и переиспользовать 
	ЗначенияАтрибутовПоУмолчанию = Новый Соответствие;
	ЗначенияАтрибутовПоУмолчанию.Вставить(КлиентHTTPПовтИсп.СвойствоПеченькаАдресРесурса(), "");
	ЗначенияАтрибутовПоУмолчанию.Вставить(КлиентHTTPПовтИсп.СвойствоПеченькаСрок(), '00010101');
	
	Дополнительно = Новый Структура("Печенье", Новый Соответствие);
	СвойстваПеченьки = КлиентHTTPПовтИсп.СвойстваКакАтрибуты();
	
	Для Каждого Получатель Из Параметры.Печенье Цикл
		Печеньки = Новый Соответствие;
		Для Каждого ПеченькоПолучателя Из Получатель.Значение Цикл
			Печенько = Новый Структура(
				"Имя, Значение, Атрибуты",
				НормализованноеИмяПеченьки(ПеченькоПолучателя.Значение.Имя), // Имя
				ПеченькоПолучателя.Значение.Значение,                        // Значение
				Новый Структура                                              // Атрибуты
			);
			Для Каждого СвойствоПеченьки Из КлиентHTTPПовтИсп.СвойстваКакАтрибуты() Цикл
				Печенько.Атрибуты.Вставить(
					СвойствоПеченьки.Ключ,
					?(
						ПеченькоПолучателя.Значение.Свойство(СвойствоПеченьки.Ключ),
						Новый Структура("Ключ, Имя, Значение, Активно", СвойствоПеченьки.Ключ, ТРег(СвойствоПеченьки.Значение), ПеченькоПолучателя.Значение[СвойствоПеченьки.Ключ], Истина),
						Новый Структура("Ключ, Имя, Значение, Активно", СвойствоПеченьки.Ключ, ТРег(СвойствоПеченьки.Значение), ЗначенияАтрибутовПоУмолчанию.Получить(СвойствоПеченьки.Ключ), Ложь)
					)
				);
			КонецЦикла;
			
			Печеньки.Вставить(НормализованноеИмяПеченьки(ПеченькоПолучателя.Ключ), Печенько);
		КонецЦикла;
		
		Дополнительно.Печенье.Вставить(НормализованноеДоменноеИмя(Получатель.Ключ), Печеньки);
	КонецЦикла;
	
	Для Каждого Получатель Из Дополнительно.Печенье Цикл
		Стр = ДоменныеИмена.Добавить();
		Стр.ДоменноеИмя = Получатель.Ключ;
	КонецЦикла;
	
	ДоменныеИмена.Сортировать("ДоменноеИмя");
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	фРезультат = Новый Соответствие;
	
	Для Каждого Получатель Из Дополнительно.Печенье Цикл
		Печеньки = Новый Соответствие;
		Для Каждого ПеченькоПолучателя Из Получатель.Значение Цикл
			Печенько = Новый Структура("Имя, Значение", ПеченькоПолучателя.Значение.Имя, ПеченькоПолучателя.Значение.Значение);
			Для Каждого Атрибут Из ПеченькоПолучателя.Значение.Атрибуты Цикл
				Если НЕ Атрибут.Значение.Активно Тогда
					Продолжить;
				КонецЕсли;
				
				Печенько.Вставить(Атрибут.Ключ, Атрибут.Значение.Значение);
			КонецЦикла;
			
			Печеньки.Вставить(ПеченькоПолучателя.Ключ, Новый ФиксированнаяСтруктура(Печенько));
		КонецЦикла;
		
		фРезультат.Вставить(Получатель.Ключ, Печеньки);
	КонецЦикла;
	
	Закрыть(фРезультат);
КонецПроцедуры


#Область ДОМЕННЫЕ_ИМЕНА
&НаКлиенте
Процедура ДоменныеИменаПриАктивизацииСтроки(Элемент)
	ПеченькиПолучателя.Очистить();
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Печеньки = Дополнительно.Печенье.Получить(Элемент.ТекущиеДанные.ДоменноеИмя);
	Если Печеньки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Печенько Из Печеньки Цикл
		Стр = ПеченькиПолучателя.Добавить();
		Стр.Ключ     = Печенько.Ключ;
		Стр.Имя      = Печенько.Значение.Имя;
		Стр.Значение = Печенько.Значение.Значение;
	КонецЦикла;
	
	ПеченькиПолучателя.Сортировать("Ключ");
КонецПроцедуры

&НаКлиенте
Процедура ДоменныеИменаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущееДоменноеИмя = ?(НоваяСтрока, Неопределено, Элемент.ТекущиеДанные.ДоменноеИмя);
КонецПроцедуры

&НаКлиенте
Процедура ДоменныеИменаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ДоменноеИмя = НормализованноеДоменноеИмя(Элемент.ТекущиеДанные.ДоменноеИмя);
	Если ТекущееДоменноеИмя <> Неопределено И ДоменноеИмя = ТекущееДоменноеИмя Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ДоменныеИмена.НайтиСтроки(Новый Структура("ДоменноеИмя", ДоменноеИмя));
	ПозицияТекущейСтрокиВНайденных = НайденныеСтроки.Найти(ДоменныеИмена.НайтиПоИдентификатору(Элемент.ТекущаяСтрока));
	Если ПозицияТекущейСтрокиВНайденных <> Неопределено Тогда
		НайденныеСтроки.Удалить(ПозицияТекущейСтрокиВНайденных);
	КонецЕсли;
	
	Отказ = (НайденныеСтроки.Количество() > 0);
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Введите уникальное доменное имя";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоменныеИменаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.ТекущиеДанные.ДоменноеИмя = НормализованноеДоменноеИмя(Элемент.ТекущиеДанные.ДоменноеИмя);
	Если ТекущееДоменноеИмя <> Неопределено И Элемент.ТекущиеДанные.ДоменноеИмя = ТекущееДоменноеИмя Тогда
		Возврат;
	КонецЕсли;
	
	Печеньки = ?(НоваяСтрока ИЛИ ТекущееДоменноеИмя = Неопределено, Новый Соответствие, Дополнительно.Печенье.Получить(ТекущееДоменноеИмя));
	
	Дополнительно.Печенье.Вставить(Элемент.ТекущиеДанные.ДоменноеИмя, Печеньки);
	Если ТекущееДоменноеИмя <> Неопределено Тогда
		Дополнительно.Печенье.Удалить(ТекущееДоменноеИмя);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоменныеИменаПередУдалением(Элемент, Отказ)
	Дополнительно.Печенье.Удалить(Элемент.ТекущиеДанные.ДоменноеИмя);
КонецПроцедуры

&НаКлиенте
Процедура ДоменныеИменаПослеУдаления(Элемент)
	ОтобразитьРецепт();
КонецПроцедуры
#КонецОбласти


#Область ПЕЧЕНЬКИ_ПОЛУЧАТЕЛЯ
&НаКлиенте
Процедура ПеченькиПолучателяПриАктивизацииСтроки(Элемент)
	АтрибутыПеченьки.Очистить();
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Рецепт = "";
		Возврат;
	КонецЕсли;
	
	Печеньки = Дополнительно.Печенье.Получить(Элементы.ДоменныеИмена.ТекущиеДанные.ДоменноеИмя);
	Печенько = Печеньки.Получить(ТекущиеДанные.Ключ);
	Если Печенько = Неопределено Тогда
		ЗначенияАтрибутовПоУмолчанию = Новый Соответствие;
		ЗначенияАтрибутовПоУмолчанию.Вставить(КлиентHTTPПовтИсп.СвойствоПеченькаАдресРесурса(), "");
		ЗначенияАтрибутовПоУмолчанию.Вставить(КлиентHTTPПовтИсп.СвойствоПеченькаСрок(), '00010101');
		
		Печенько = Новый Структура("Имя, Значение, Атрибуты");
		Печенько.Атрибуты = Новый Структура;
		
		Для Каждого СвойствоПеченьки Из КлиентHTTPПовтИсп.СвойстваКакАтрибуты() Цикл
			Печенько.Атрибуты.Вставить(
				СвойствоПеченьки.Ключ,
				Новый Структура("Ключ, Имя, Значение, Активно", СвойствоПеченьки.Ключ, ТРег(СвойствоПеченьки.Значение), ЗначенияАтрибутовПоУмолчанию.Получить(СвойствоПеченьки.Ключ), Ложь)
			);
		КонецЦикла;
	Иначе
		Для Каждого Атрибут Из Печенько.Атрибуты Цикл
			ЗаполнитьЗначенияСвойств(АтрибутыПеченьки.Добавить(), Атрибут.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ОтобразитьРецепт(Печенько);
КонецПроцедуры

&НаКлиенте
Процедура ПеченькиПолучателяПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = (Элементы.ДоменныеИмена.ТекущиеДанные = Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПеченькиПолучателяПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекущийКлючПеченьки     = Неопределено;
		ТекущееИмяПеченьки      = Неопределено;
		ТекущееЗначениеПеченьки = Неопределено;
	Иначе
		ТекущийКлючПеченьки     = Элемент.ТекущиеДанные.Ключ;
		ТекущееИмяПеченьки      = Элемент.ТекущиеДанные.Имя;
		ТекущееЗначениеПеченьки = Элемент.ТекущиеДанные.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеченькиПолучателяПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Элемент.ТекущиеДанные.Имя) Тогда
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Имя Cookie не может быть пустым";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ИмяПеченьки = НормализованноеДоменноеИмя(Элемент.ТекущиеДанные.Имя);
	ЗначениеПеченьки = Элемент.ТекущиеДанные.Значение;
	Если ТекущееИмяПеченьки <> Неопределено
		И ИмяПеченьки = ТекущееИмяПеченьки
		И ЗначениеПеченьки = ТекущееЗначениеПеченьки
	Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ПеченькиПолучателя.НайтиСтроки(Новый Структура("Имя", ИмяПеченьки));
	ПозицияТекущейСтрокиВНайденных = НайденныеСтроки.Найти(ПеченькиПолучателя.НайтиПоИдентификатору(Элемент.ТекущаяСтрока));
	Если ПозицияТекущейСтрокиВНайденных <> Неопределено Тогда
		НайденныеСтроки.Удалить(ПозицияТекущейСтрокиВНайденных);
	КонецЕсли;
	
	Отказ = (НайденныеСтроки.Количество() > 0);
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Введите уникальное имя Cookie для доменного имени";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеченькиПолучателяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.ТекущиеДанные.Имя = НормализованноеИмяПеченьки(Элемент.ТекущиеДанные.Имя);
	Элемент.ТекущиеДанные.Значение = НормализованноеЗначениеПеченьки(Элемент.ТекущиеДанные.Значение);
	Если ТекущееИмяПеченьки <> Неопределено
		И Элемент.ТекущиеДанные.Имя = ТекущееИмяПеченьки
		И Элемент.ТекущиеДанные.Значение = ТекущееЗначениеПеченьки
	Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.ТекущиеДанные.Ключ = Элемент.ТекущиеДанные.Имя;
	
	Печеньки = Дополнительно.Печенье.Получить(Элементы.ДоменныеИмена.ТекущиеДанные.ДоменноеИмя);
	Печенько = Печеньки.Получить(ТекущийКлючПеченьки);
	Если Печенько = Неопределено Тогда
		ЗначенияАтрибутовПоУмолчанию = Новый Соответствие;
		ЗначенияАтрибутовПоУмолчанию.Вставить(КлиентHTTPПовтИсп.СвойствоПеченькаАдресРесурса(), "");
		ЗначенияАтрибутовПоУмолчанию.Вставить(КлиентHTTPПовтИсп.СвойствоПеченькаСрок(), '00010101');
		
		Печенько = Новый Структура("Имя, Значение, Атрибуты");
		Печенько.Атрибуты = Новый Структура;
		
		Для Каждого СвойствоПеченьки Из КлиентHTTPПовтИсп.СвойстваКакАтрибуты() Цикл
			Печенько.Атрибуты.Вставить(
				СвойствоПеченьки.Ключ,
				Новый Структура("Имя, Значение, Активно", ТРег(СвойствоПеченьки.Значение), ЗначенияАтрибутовПоУмолчанию.Получить(СвойствоПеченьки.Ключ), Ложь)
			);
		КонецЦикла;
	КонецЕсли;
	
	Печенько.Имя      = Элемент.ТекущиеДанные.Имя;
	Печенько.Значение = НормализованноеЗначениеПеченьки(Элемент.ТекущиеДанные.Значение);
	
	Печеньки.Вставить(Элемент.ТекущиеДанные.Ключ, Печенько);
	Если ТекущийКлючПеченьки <> Неопределено И ТекущийКлючПеченьки <> Элемент.ТекущиеДанные.Ключ Тогда
		Печеньки.Удалить(ТекущийКлючПеченьки);
	КонецЕсли;
	
	ОтобразитьРецепт(Печенько);
КонецПроцедуры

&НаКлиенте
Процедура ПеченькиПолучателяПередУдалением(Элемент, Отказ)
	Печеньки = Дополнительно.Печенье.Получить(Элементы.ДоменныеИмена.ТекущиеДанные.ДоменноеИмя);
	Печеньки.Удалить(Элемент.ТекущиеДанные.Ключ);
КонецПроцедуры
#КонецОбласти


#Область АТРИБУТЫ_ПЕЧЕНЬКИ
&НаКлиенте
Процедура АтрибутыПеченькиПриИзменении(Элемент)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущиеДанные.Активно = (ТекущиеДанные.Активно И (ЗначениеЗаполнено(ТекущиеДанные.Значение) ИЛИ ТекущиеДанные.Ключ = КлиентHTTPПовтИсп.СвойствоПеченькаЗащищенноеСоединение()));
	
	Печеньки = Дополнительно.Печенье.Получить(Элементы.ДоменныеИмена.ТекущиеДанные.ДоменноеИмя);
	Печенько = Печеньки.Получить(Элементы.ПеченькиПолучателя.ТекущиеДанные.Ключ);
	Для Каждого Стр Из АтрибутыПеченьки Цикл
		ЗаполнитьЗначенияСвойств(Печенько.Атрибуты[Стр.Ключ], Стр);
	КонецЦикла;
	
	ОтобразитьРецепт(Печенько);
КонецПроцедуры
#КонецОбласти


#Область ДОПОЛНИТЕЛЬНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ
&НаКлиенте
Процедура ОтобразитьРецепт(Знач Печенько = Неопределено)
	Если Печенько = Неопределено Тогда
		ТекущиеДанныеПолучатели = Элементы.ДоменныеИмена.ТекущиеДанные;
		ТекущиеДанныеПеченькиПолучателя = Элементы.ПеченькиПолучателя.ТекущиеДанные;
		
		Если ТекущиеДанныеПолучатели = Неопределено ИЛИ ТекущиеДанныеПеченькиПолучателя = Неопределено Тогда
			Рецепт = "";
			Возврат;
		КонецЕсли;
		
		Печенько = Дополнительно.Печенье.Получить(ТекущиеДанныеПолучатели.ДоменноеИмя).Получить(ТекущиеДанныеПеченькиПолучателя.Ключ);
	КонецЕсли;
	
	ЧастиРецепта = Новый Массив;
	ЧастиПунктаРецепта = Новый Массив;
	
	ЧастиПунктаРецепта.Добавить(Печенько.Имя);
	Если Печенько.Значение <> Неопределено Тогда
		ЧастиПунктаРецепта.Добавить(Печенько.Значение);
	КонецЕсли;
	
	ЧастиРецепта.Добавить(СтрСоединить(ЧастиПунктаРецепта, "="));
	
	Для Каждого Атрибут Из Печенько.Атрибуты Цикл
		ЧастиПунктаРецепта.Очистить();
		
		Если НЕ Атрибут.Значение.Активно Тогда
			Продолжить;
		КонецЕсли;
		
		ЧастиПунктаРецепта.Добавить(Атрибут.Значение.Имя);
		Если ЗначениеЗаполнено(Атрибут.Значение.Значение) Тогда
			ЧастиПунктаРецепта.Добавить(
				?(
					Атрибут.Ключ = КлиентHTTPПовтИсп.СвойствоПеченькаСрок(),
					КлиентHTTPСлужебный.ДатаВHTTP(Атрибут.Значение.Значение),
					Атрибут.Значение.Значение
				)
			);
		КонецЕсли;
		
		ЧастиРецепта.Добавить(СтрСоединить(ЧастиПунктаРецепта, "="));
	КонецЦикла;
	
	Рецепт = СтрСоединить(ЧастиРецепта, "; ");
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НормализованноеДоменноеИмя(Знач ДоменноеИмя)
	Возврат НРег(СокрЛП(ДоменноеИмя));
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НормализованноеИмяПеченьки(Знач ИмяПеченьки)
	Возврат НРег(СокрЛП(ИмяПеченьки));
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НормализованноеЗначениеПеченьки(Знач ЗначениеПеченьки)
	Возврат ?(ПустаяСтрока(ЗначениеПеченьки), Неопределено, СокрЛП(ЗначениеПеченьки));
КонецФункции
#КонецОбласти
